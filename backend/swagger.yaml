openapi: 3.0.0
info:
  title: protrek management system
  version: 1.0.0
  description: API for managing tasks, projects, and users.

servers:
  - url: http://127.0.0.1:4000
    description: Local server

paths:
  /api/user/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                  token:
                    type: string
        '400':
          description: Invalid credentials

  /api/user/signup:
    post:
      summary: User signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful signup
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                  token:
                    type: string
        '400':
          description: Signup error
  /api/projects:
    get:
      summary: Get all projects
      responses:
        '200':
          description: A list of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    description:
                      type: string

  /api/tasks:
    get:
      summary: Get all tasks
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    title:
                      type: string
                    description:
                      type: string
                    project:
                      type: string
                    assignedTo:
                      type: string
                    status:
                      type: string
                    dueDate:
                      type: string
                      format: date-time

    post:
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                project:
                  type: string
                assignedTo:
                  type: string
                status:
                  type: string
                dueDate:
                  type: string
                  format: date-time
      responses:
        '201':
          description: Task created successfully

  /api/tasks/{id}:
    get:
      summary: Get a task by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single task
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
    delete:
      summary: Delete a task by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task deleted successfully

    patch:
      summary: Update a task by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                status:
                  type: string
                dueDate:
                  type: string
                  format: date-time
      responses:
        '200':
          description: Task updated successfully

  /api/tasks/project/{projectId}:
    get:
      summary: Get tasks by project ID
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of tasks for a project
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    title:
                      type: string

  /api/tasks/assigned/{userId}:
    get:
      summary: Get tasks by assigned user ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of tasks assigned to a user
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    title:
                      type: string

components:
  schemas:
    UserCredentials:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    AuthResponse:
      type: object
      properties:
        email:
          type: string
        token:
          type: string
    Task:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        project:
          type: string
        assignedTo:
          type: string
        status:
          type: string
        dueDate:
          type: string
          format: date-time